# Import modules
Import-Module ActiveDirectory

# Delacre variables
$Domain="DC=PenTest,DC=Lab" # <-- EDIT THIS ---
$BaseOU = "Departments"
$DepartmentList="Sales","Accounting","Execs","IT","HR"
$UPN = "PenTest.lab"

# Build the Departments OU
New-ADOrganizationalUnit -Name $BaseOU -Path $Domain

# Loop through the list of departments in the OUList variable
foreach ($Department in $DepartmentList) {
    New-ADOrganizationalUnit -Path "OU=$BaseOU,$Domain" -Name $Department
}

# Loop through the list of departments in the OUList variable
foreach ($Group in $DepartmentList) {
    New-ADGroup -GroupCategory Security -GroupScope Global -Name $Group
}

# Read in CSV file
$IngestUsers=Import-Csv C:\IngestUsers.csv -Delimiter ","

# Loop through CSV file and create new user accounts
foreach ($User in $IngestUsers) {

    $username = $User.sAMAccountName
    $password = $User.Password
    $givenname = $User.givenName
    $surname = $User.sn
    $company = $User.company
    $department = $User.department
    $displayname = $User.FullName
    $city = $User.City
    $jobtitle = $User.title


    # Check to see if the user already exists in AD
    if (Get-ADUser -F { SamAccountName -eq $username }) {
        
        # If user does exist, give a warning
        Write-Warning "A user account with username $username already exists in Active Directory."
    }
    else {

        # User does not exist then proceed to create the new user account
        New-ADUser `
            -SamAccountName $username `
            -UserPrincipalName "$username@$UPN" `
            -Name "$givenname $sn" `
            -GivenName $givenname `
            -Surname $sn `
            -Enabled $True `
            -DisplayName $displayname `
            -City $city `
            -Company $company `
            -Title $jobtitle `
            -Department $department `
            -AccountPassword (ConvertTo-secureString $password -AsPlainText -Force) -ChangePasswordAtLogon $False

        # If user is created successfully, display a message on the console
        Write-Host "The user $username was successfully created." -ForegroundColor Cyan
    }
}

# The Sorting Hat


Read-Host -Prompt "Press any key to exit"

